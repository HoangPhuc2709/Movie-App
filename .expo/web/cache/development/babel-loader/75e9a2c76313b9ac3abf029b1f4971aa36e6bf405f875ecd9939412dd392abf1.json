{"ast":null,"code":"import { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport React, { useContext } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { AuthContext } from \"../components/context/AuthContext\";\nimport MovieScreen from \"../screens/MovieScreen\";\nimport PersonScreen from \"../screens/PersonScreen\";\nimport SearchScreen from \"../screens/SearchScreen\";\nimport LoginScreen from \"../screens/LoginScreen\";\nimport RegisterScreen from \"../screens/RegisterScreen\";\nimport TrailerScreen from \"../screens/TrailerScreen\";\nimport DrawerNavigator from \"./DrawerNavigator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar LoadingIndicator = function LoadingIndicator() {\n  return _jsx(View, {\n    style: styles.loadingContainer,\n    children: _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"#ef4444\"\n    })\n  });\n};\nexport default function AppNavigation() {\n  var _useContext = useContext(AuthContext),\n    isLoggedIn = _useContext.isLoggedIn,\n    isLoading = _useContext.isLoading;\n  if (isLoading) {\n    return _jsx(LoadingIndicator, {});\n  }\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      children: isLoggedIn ? _jsxs(_Fragment, {\n        children: [_jsx(Stack.Screen, {\n          name: \"MainApp\",\n          component: DrawerNavigator\n        }), _jsx(Stack.Screen, {\n          name: \"Movie\",\n          component: MovieScreen,\n          options: {\n            animation: \"slide_from_right\"\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Person\",\n          component: PersonScreen,\n          options: {\n            animation: \"slide_from_right\"\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Search\",\n          component: SearchScreen,\n          options: {\n            animation: \"slide_from_bottom\"\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Trailer\",\n          component: TrailerScreen,\n          options: {\n            animation: \"fade\"\n          }\n        })]\n      }) : _jsxs(_Fragment, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen,\n          options: {\n            animation: \"fade\"\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Register\",\n          component: RegisterScreen,\n          options: {\n            animation: \"slide_from_right\"\n          }\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  loadingContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#0f172a\"\n  }\n});\n_NativeWindStyleSheet.create({\n  styles: {\n    \"flex\": {\n      \"display\": \"flex\"\n    }\n  }\n});","map":{"version":3,"names":["React","useContext","NavigationContainer","createNativeStackNavigator","View","ActivityIndicator","StyleSheet","AuthContext","MovieScreen","PersonScreen","SearchScreen","LoginScreen","RegisterScreen","TrailerScreen","DrawerNavigator","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Stack","LoadingIndicator","style","styles","loadingContainer","children","size","color","AppNavigation","_useContext","isLoggedIn","isLoading","Navigator","screenOptions","headerShown","Screen","name","component","options","animation","create","flex","justifyContent","alignItems","backgroundColor","_NativeWindStyleSheet"],"sources":["D:/HK2 2025/Mobile/APP/my-app-3/my-app/navigation/appNavigation.js"],"sourcesContent":["// src/navigation/AppNavigation.js\nimport React, { useContext } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { View, ActivityIndicator, StyleSheet } from \"react-native\";\nimport { AuthContext } from \"../components/context/AuthContext\";\nimport MovieScreen from \"../screens/MovieScreen\";\nimport PersonScreen from \"../screens/PersonScreen\";\nimport SearchScreen from \"../screens/SearchScreen\";\nimport LoginScreen from \"../screens/LoginScreen\";\nimport RegisterScreen from \"../screens/RegisterScreen\";\nimport TrailerScreen from \"../screens/TrailerScreen\";\nimport DrawerNavigator from \"./DrawerNavigator\";\n\nconst Stack = createNativeStackNavigator();\n\nconst LoadingIndicator = () => (\n    <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color=\"#ef4444\" />\n    </View>\n);\n\nexport default function AppNavigation() {\n    const { isLoggedIn, isLoading } = useContext(AuthContext);\n\n    if (isLoading) {\n        return <LoadingIndicator />;\n    }\n\n    return (\n        <NavigationContainer>\n            <Stack.Navigator screenOptions={{ headerShown: false }}>\n                {isLoggedIn ? (\n                    <>\n                        <Stack.Screen\n                            name=\"MainApp\"\n                            component={DrawerNavigator}\n                        />\n                        <Stack.Screen\n                            name=\"Movie\"\n                            component={MovieScreen}\n                            options={{ animation: \"slide_from_right\" }}\n                        />\n                        <Stack.Screen\n                            name=\"Person\"\n                            component={PersonScreen}\n                            options={{ animation: \"slide_from_right\" }}\n                        />\n                        <Stack.Screen\n                            name=\"Search\"\n                            component={SearchScreen}\n                            options={{ animation: \"slide_from_bottom\" }}\n                        />\n                        <Stack.Screen\n                            name=\"Trailer\"\n                            component={TrailerScreen}\n                            options={{ animation: \"fade\" }}\n                        />\n                    </>\n                ) : (\n                    <>\n                        <Stack.Screen\n                            name=\"Login\"\n                            component={LoginScreen}\n                            options={{ animation: \"fade\" }}\n                        />\n                        <Stack.Screen\n                            name=\"Register\"\n                            component={RegisterScreen}\n                            options={{ animation: \"slide_from_right\" }}\n                        />\n                    </>\n                )}\n            </Stack.Navigator>\n        </NavigationContainer>\n    );\n}\n\nconst styles = StyleSheet.create({\n    loadingContainer: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundColor: \"#0f172a\",\n    },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}